<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 下面的代卖虽然好，但是使用的 是 default constructor, 但是我们想使用的 是我们自己的constructor-->
    <bean id="apple1" class="com.example.demo.Entity.Apple">
        <property name="name" value="Shandong"/>
    </bean>

    <!--    下面的的是使用 applu 里面的 constructor 来创建 bean 的对象-->
    <!--    不仅能够在当前的 xml 下面获取，也可以在 不同的xml 西面获取 id ，只要 classpath 配置的正确-->
    <!--    比如说classpath:applicationContext-*.xml，就在查找所有的 xml 文件 -->
    <bean id="apple2" class="com.example.demo.Entity.Apple">
        <constructor-arg name="name" value="南京"/>
        <constructor-arg name="price" value="19.0"/>
    </bean>


    <!--    下面的是依赖注入-->
    <!--    alex 要吃苹果，所以需要注入(说明)前面的是哪一个苹果-->
    <bean id="child1" class="com.example.demo.Entity.Child">
        <constructor-arg name="name" value="alex"/>
        <constructor-arg name="apple" ref="apple1"/>
    </bean>

<!--    关于 scope 属性-->
<!--        prototype: -->
<!--            如果是 prototype：不调用get bean，是不会生成的对象的-->
<!--            只会在 getBean 或者 注入的时候才会创建-->

<!--        singleton-->
<!--            默认的 -->
<!--            容器起来的时候就会立刻别创建 -->





</beans>